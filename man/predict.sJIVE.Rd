% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sJIVE.R
\name{predict.sJIVE}
\alias{predict.sJIVE}
\title{Prediction for sJIVE}
\usage{
\method{predict}{sJIVE}(object, newdata, threshold = 0.001, max.iter = 2000, ...)
}
\arguments{
\item{object}{An object of class "sJIVE", usually a fitted sJIVE model.}

\item{newdata}{A list of matrices representing the new X datasets.}

\item{threshold}{The threshold used to determine convergence of the algorithm.}

\item{max.iter}{The maximum number of iterations for each instance
of the sJIVE algorithm.}

\item{...}{further arguments passed to or from other methods.}
}
\value{
A list of the following components is returned:
 \item{Ypred}{The fitted Y values.}
 \item{S_J}{A matrix capturing the joint scores of newdata.}
 \item{S_I}{A list containing matrices that capture the individual scores of newdata.}
 \item{iterations}{The number of iterations needed to reach convergence.}
 \item{error}{The error value at which the model converged.}
}
\description{
Predicted values based on the an sJIVE model.
}
\details{
\code{predict.sJIVE} calculates predicted values for \code{newdata}
based on the fitted model. The function first calculates the joint and
individual score matrices for \code{newdata}. Note that the fitted model's
loadings and coefficients are treated as known and will not get re-calculated.
Once the new score matrices are obtained, the linear prediction model will be
evaluated using the new scores as the data matrix.
}
\examples{
train.x <- list(matrix(rnorm(300), ncol=20),matrix(rnorm(200), ncol=20))
train.y <- rnorm(20)
test.x <- list(matrix(rnorm(600), ncol=40),matrix(rnorm(400), ncol=40))
train.fit <- sJIVE(X=train.x,Y=train.y,rankJ=1,rankA=c(1,1),eta=0.5)
test.fit <- predict(train.fit, newdata = test.x)
}
